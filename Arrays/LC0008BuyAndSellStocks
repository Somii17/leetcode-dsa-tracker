// ‚úÖ Problem: https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
// üí° Approach: Track the minimum price while traversing and calculate the max profit at each step.
// ‚è±Ô∏è Time: O(n), Space: O(1)

class Solution {
    public int maxProfit(int[] prices) {
        int minPrice = Integer.MAX_VALUE;
        int maxProfit = 0;

        for (int price : prices) {
            if (price < minPrice) {
                minPrice = price; 
            } else {
                maxProfit = Math.max(maxProfit, price - minPrice);
            }
        }

        return maxProfit;
    }
}
